---
- name: Ensure custom facts directory exists
  file:
    mode: 0755
    path: /etc/ansible/facts.d
    state: directory

- name: 'Detect the latest {{ app_name }} version'
  uri:
    url: https://api.github.com/repos/cloudflare/cloudflared/releases/latest
  register: cloudflared_latest_release_tag

- name: 'Determine whether or not the latest version of {{ app_name }} is already installed'
  set_fact:
    install_cloudflared: "{{ (ansible_local.cloudflared is not defined) or \
      ((ansible_local.cloudflared is defined) and \
      (ansible_local['cloudflared']['settings']['version'] != cloudflared_latest_release_tag.json.tag_name)) }}"

- set_fact:
    # Change the architecture to arm64 if the ansible_architecture is aarch64
    arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}"

- set_fact:
    release_regex: "cloudflared-linux-{{ arch }}: [a-z0-9]+"
    release_replace_regex: "cloudflared-linux-{{ arch }}: "

- name: 'Find the Checksum of {{ app_name }} installer'
  set_fact:
    cloudflared_checksum: "{{ cloudflared_latest_release_tag.json.body | regex_search(release_regex) \
      | regex_replace(release_replace_regex,'') }}"
  when:
    - install_cloudflared
    - ansible_system == 'Linux'

- name: 'Ensure {{ app_name }} is installed'
  get_url:
    url: 'https://github.com/cloudflare/cloudflared/releases/download/{{ cloudflared_latest_release_tag.json.tag_name }}/cloudflared-linux-{{ arch }}'
    dest: /usr/local/bin/cloudflared
    checksum: 'sha256:{{ cloudflared_checksum }}'
    mode: 0755
  when:
    - install_cloudflared
    - ansible_system == 'Linux'

- name: 'Ensure {{ app_name }} is installed'
  unarchive:
    src: 'https://github.com/cloudflare/cloudflared/releases/download/{{ cloudflared_latest_release_tag.json.tag_name }}/cloudflared-darwin-{{ arch }}.tgz'
    dest: /usr/local/bin
    remote_src: true
  when:
    - install_cloudflared
    - ansible_system == 'Darwin'
  environment:
    PATH: '/usr/local/opt/gnu-tar/libexec/gnubin:{{ ansible_env.PATH }}'

- name: 'Save meta information about the version of {{ app_name }} that was installed'
  community.general.ini_file:
    path: /etc/ansible/facts.d/cloudflared.fact
    mode: 0644
    section: settings
    option: version
    value: "{{ cloudflared_latest_release_tag.json.tag_name | replace('v','') }}"
    backup: true
    no_extra_spaces: true
  when: install_cloudflared
